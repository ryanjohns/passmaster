#!/usr/bin/env ruby

require 'optparse'

class Deploy

  def initialize(args)
    @tag = nil

    option_parser = OptionParser.new do |opts|
      opts.on('-t', '--tag [TAG]', 'The tag to deploy. When not given, creates a new tag.') do |tag|
        if tag =~ /^[0-9]{14}$/
          @tag = tag
        else
          puts "Tag must be a timestamp in the format yyyymmddhhmmss."
          exit 1
        end
      end
      opts.on_tail('-h', '--help', 'Show this message.') do
        puts opts
        exit 1
      end
    end

    option_parser.parse!(args)
  end

  def deploy
    update_working_copy
    create_deploy_tag if @tag.nil?
    push_tag_upstream
  end

  private

  def create_deploy_tag
    @tag = Time.now.utc.strftime("%Y%m%d%H%M%S")
    exit 1 unless prompt_user("No deploy tag specified. Create new deploy tag #{@tag}?")
    upload_assets
    puts "Creating new deploy tag."
    system("git tag -a -m 'Creating deploy tag #{@tag}' #{@tag}")
    system("git push --tags upstream master")
  end

  def prompt_user(message)
    print "#{message} [y/N] "
    answer = STDIN.gets
    answer =~ /^(y|yes)$/i
  end

  def push_tag_upstream
    puts "Force pushing #{@tag} to upstream:production."
    system("git push --force upstream #{@tag}~0:production")
  end

  def update_working_copy
    puts "Updating working copy."
    git_status = `git status`
    if git_status !~ /On branch master/
      puts "You must be on the master branch!"
      exit 1
    end
    if git_status !~ /working (directory|tree) clean/
      puts "You must have a clean working directory!"
      exit 1
    end
    system("git pull --tags upstream master")
  end

  def upload_assets
    puts "Compiling and uploading assets to S3."
    system("RAILS_ENV=production bundle exec rake assets:upload")
    if `git status` =~ /manifest.json/
      system("git add config/manifest.json")
      system("git commit -m 'Update assets manifest.'")
    end
  end

end

Deploy.new(ARGV).deploy
